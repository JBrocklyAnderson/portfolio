// body {
//     overflow-x: hidden;
// }

body#index > *:not(#intro, #mobileHeader, #navBar) {
    margin-top: 2rem;
    margin-bottom: 15rem;
}

.background {
    background: $black-green-gradient;
    background-attachment: fixed;
    background-size: cover;
}

.bg-burkinabe {
    background: $red-black-green-gradient;
    background-attachment: fixed;
    background-size: cover;
}

// Spacing 
.base-margin {
    margin: 1rem;
}

.base-padding {
    padding: 1rem;
}

.padding-side-extend {
    padding: 0.25rem 0.5rem 0.25rem 0.5rem;
}

.gap {
    gap: 1rem;
}

.sm-gap {
    gap: 0.33rem;
}

.sm-row-gap {
    row-gap: 0.5rem;
}

.hide {
    display: none;
}

.block {
    display: block;
}

// Flexbox
.flex {
    display: flex;
}

.flex-wrap {
    flex-wrap: wrap;
}

.h-centered-columns {
    justify-content: center;
}

.v-centered-columns {
    align-items: center;
}

// Grid
body.main-grid-columns {
    display: grid;
    grid-template-columns: auto;

    @media (min-width: 513px) and (max-width: 768px) {
        grid-template-columns: #{$gridColumnsM};
    } 

    @media (min-width: 769px) and (max-width: 1280px) {
        grid-template-columns: #{$gridColumnsLG};
    }

    @media (min-width: 1281px) {
        grid-template-columns: #{$gridColumnsXLG};
    }
}

.snap-middle {    
    grid-column: main-content-left / main-content-right;
}

body#BurkinaFaso header {
    z-index: 10;
    grid-row: 1 / 3;
    margin-top: 30.5vw;
}

#essay {
    margin-block: 0;
}

.float-up-hidden {
    opacity: 0;
    transform: translateY(8rem);
    transition: opacity 0.6s cubic-bezier(0, 0, 0, 1), transform 0.6s cubic-bezier(0, 0, 0, 1);
}

.float-up-visible {
    opacity: 1;
    transform: translateY(0);
}

#aboutMeInfo p:nth-of-type(2) {
    margin: 0.5rem 0 1rem 0;
}

#aboutMeInfo p:nth-of-type(n+4) {
    margin: 0.5rem 0 0 0;
}

// Subgrids
.skill-grid {
    display: grid;
    grid-gap: 2rem;
    justify-items: center;
    align-items: center;
    grid-template-columns: repeat(auto-fill, minmax(10rem, 1fr));

    @media (max-width: 512px) {
        grid-template-columns: 1fr 1fr;
    }

    @media (min-width: 513px) and (max-width: 768px) {
        grid-template-columns: 1fr 1fr 1fr;
    }
}

.skill-card {
    position: relative;
}

.tooltip {
    position: absolute;
    color: $secondary-color;
    bottom: 100%;
    left: 0;
    visibility: hidden;
    opacity: 0; 
    transition: visibility 0s, opacity 0.2s ease;
    pointer-events: none; 
}

.skill-card:hover .tooltip {
    visibility: visible;
    opacity: 1;
}

.slide-out-initial {
    @include slideOutInitial;
}

.slide-out-final {
    @include slideOutFinal;
}

.skill-card:hover .slide-out-initial {
    @include slideOutFinal;
}

.project-grid {
    display: grid;
    grid-template-columns: repeat(2, minmax(auto, 1fr));

    @media (max-width: 768px) {
        grid-template-columns: 1fr;
    }
}

#projectsGrid article {
    height: 20rem;

    @media (min-width: 769px) {
        height: 30rem;
    }
}

#projectsGrid article:hover {
    animation: expandGlow 0.2s forwards;
}

.course-container {
    transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
}

// Element stylings
.frosted {
    background-color: $secondary-color;
    border-radius: 1rem;
}

.shadow {
    box-shadow: $shadow;
}

.dark-shadow {
    box-shadow: $dark-shadow;
}

.platinum-shadow {
    box-shadow: $platinum-shadow;
}

.gold-glow {
    box-shadow: $gold-glow;
}

#uniCourseList {
    padding: 0 0 1rem 0;
}

.course {
    background-color: $primary-color;
    text-shadow: $txt-glow;
    border-radius: 1rem;
    font-weight: bold;
    color: white;
}

.course:hover {
    cursor: default;
}

.popout:hover {
    transform: scale(110%, 110%);
    transition: transform 0.1s ease-in-out; 
}

// Class used to display elements only to screen readers
.visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    overflow: hidden;
    clip-path: inset(50%);
    white-space: nowrap;
}

// Specific elements
#workExp h3:not(:first-of-type),  #education h3:not(:first-of-type), #awards h3:not(:first-of-type) {
    margin: 1rem 0 0 0;
}